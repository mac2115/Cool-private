


    --//Variables
    local Settings= {
        Farms ={
            MobFarm = false,
            Selectedmob = "Frisker",
            Position = 6,
            TweenSpeed = 100 ,
            Autoequip = false,
        },
        Teleports = {
            Selectednpc = "",

        },
        Autoquest = {
            Toggle = false,
            Questboard = "MissionBoard 12",
            Position = 6
    } ,
    Minigame = false,
    Shikaifight ={
        Toggle = false,
        Position =  6
    },
    Adjfarm = {
        Toggle = false,
        Position = -8.7
    },
    Closest = {
        Toggle = false,
        Position = -8,
        Distance = 150,
    }
    }
        local attackremote = game:GetService("ReplicatedStorage").Remotes.ServerCombatHandler
        local mobTable = {'Fishbone','Frisker','LostSoul','Jackal','Shinigami','Menos'}
        local RunService = game:GetService("RunService");
        local NextFrame = RunService.Heartbeat;
        local Players = game:GetService("Players");
        local Player = Players.LocalPlayer;
        local ForceStop = false;
        local npcTable = {}
        local player = game.Players.LocalPlayer
        local questTable = {"nothing"}
        local name = player.Name
        local modtable = {15293648; --iqcs
        30370774; --Rakutsu
        83254134; --s9d
        80916772; -- Jaleox
        23977275; -- Tsumoe
        82280601; -- Lipopss
        83254134; -- s9d
        1506296146;-- okhwan
        606256561; -- Abaddonisu
        18577857; -- DripMonger
        4061168; -- Castalysts
        1159863871; -- enraiton
        432360403; -- sinfuldms
        10712932; -- Yreol
        20660983; -- H3mzz
        83338597; -- LeafyRei
        54066348; -- PioClean
        25329898; -- Joochun
        8925483; -- K1LLUAA
        1161914;
        3427072680; -- haniyura
        57431326; -- Khaotxc
        77857290; -- 4Data
        4192362393; -- mitakamora
        300780145; -- invictal
        232346707; -- Drakos
        59903508; --cartier361
        400349; -- streak
        194177872,
        36989055; -- Minst_r
        36710249; -- MassRelays
        30370774;
    }





    ---
    --//ESP Settings--
    --Settings--
    local ESP = {
        Enabled = false,
        Boxes = false,
        BoxShift = CFrame.new(0,-1.5,0),
        BoxSize = Vector3.new(4,6,0),
        Color = Color3.fromRGB(255, 0, 0),
        FaceCamera = false,
        Names = false,
        TeamColor = false,
        Thickness = 2,
        AttachShift = 1,
        TeamMates = false,
        Players = true,
        
        Objects = setmetatable({}, {__mode="kv"}),
        Overrides = {}
    }

    --//ESP Variables
    --Declarations--
    local cam = workspace.CurrentCamera
    local plrs = game:GetService("Players")
    local plr = plrs.LocalPlayer
    local mouse = plr:GetMouse()

    local V3new = Vector3.new
    local WorldToViewportPoint = cam.WorldToViewportPoint

    --Functions--
    local function Draw(obj, props)
        local new = Drawing.new(obj)
        
        props = props or {}
        for i,v in pairs(props) do
            new[i] = v
        end
        return new
    end

    function ESP:GetTeam(p)
        local ov = self.Overrides.GetTeam
        if ov then
            return ov(p)
        end
        
        return p and p.Team
    end

    function ESP:IsTeamMate(p)
        local ov = self.Overrides.IsTeamMate
        if ov then
            return ov(p)
        end
        
        return self:GetTeam(p) == self:GetTeam(plr)
    end

    function ESP:GetColor(obj)
        local ov = self.Overrides.GetColor
        if ov then
            return ov(obj)
        end
        local p = self:GetPlrFromChar(obj)
        return p and self.TeamColor and p.Team and p.Team.TeamColor.Color or self.Color
    end

    function ESP:GetPlrFromChar(char)
        local ov = self.Overrides.GetPlrFromChar
        if ov then
            return ov(char)
        end
        
        return plrs:GetPlayerFromCharacter(char)
    end

    function ESP:Toggle(bool)
        self.Enabled = bool
        if not bool then
            for i,v in pairs(self.Objects) do
                if v.Type == "Box" then --fov circle etc
                    if v.Temporary then
                        v:Remove()
                    else
                        for i,v in pairs(v.Components) do
                            v.Visible = false
                        end
                    end
                end
            end
        end
    end

    function ESP:GetBox(obj)
        return self.Objects[obj]
    end

    function ESP:AddObjectListener(parent, options)
        local function NewListener(c)
            if type(options.Type) == "string" and c:IsA(options.Type) or options.Type == nil then
                if type(options.Name) == "string" and c.Name == options.Name or options.Name == nil then
                    if not options.Validator or options.Validator(c) then
                        local box = ESP:Add(c, {
                            PrimaryPart = type(options.PrimaryPart) == "string" and c:WaitForChild(options.PrimaryPart) or type(options.PrimaryPart) == "function" and options.PrimaryPart(c),
                            Color = type(options.Color) == "function" and options.Color(c) or options.Color,
                            ColorDynamic = options.ColorDynamic,
                            Name = type(options.CustomName) == "function" and options.CustomName(c) or options.CustomName,
                            IsEnabled = options.IsEnabled,
                            RenderInNil = options.RenderInNil
                        })
                        --TODO: add a better way of passing options
                        if options.OnAdded then
                            coroutine.wrap(options.OnAdded)(box)
                        end
                    end
                end
            end
        end

        if options.Recursive then
            parent.DescendantAdded:Connect(NewListener)
            for i,v in pairs(parent:GetDescendants()) do
                coroutine.wrap(NewListener)(v)
            end
        else
            parent.ChildAdded:Connect(NewListener)
            for i,v in pairs(parent:GetChildren()) do
                coroutine.wrap(NewListener)(v)
            end
        end
    end

    local boxBase = {}
    boxBase.__index = boxBase

    function boxBase:Remove()
        ESP.Objects[self.Object] = nil
        for i,v in pairs(self.Components) do
            v.Visible = false
            v:Remove()
            self.Components[i] = nil
        end
    end

    function boxBase:Update()
        if not self.PrimaryPart then
            --warn("not supposed to print", self.Object)
            return self:Remove()
        end

        local color
        if ESP.Highlighted == self.Object then
        color = ESP.HighlightColor
        else
            color = self.Color or self.ColorDynamic and self:ColorDynamic() or ESP:GetColor(self.Object) or ESP.Color
        end

        local allow = true
        if ESP.Overrides.UpdateAllow and not ESP.Overrides.UpdateAllow(self) then
            allow = false
        end
        if self.Player and not ESP.TeamMates and ESP:IsTeamMate(self.Player) then
            allow = false
        end
        if self.Player and not ESP.Players then
            allow = false
        end
        if self.IsEnabled and (type(self.IsEnabled) == "string" and not ESP[self.IsEnabled] or type(self.IsEnabled) == "function" and not self:IsEnabled()) then
            allow = false
        end
        if not workspace:IsAncestorOf(self.PrimaryPart) and not self.RenderInNil then
            allow = false
        end

        if not allow then
            for i,v in pairs(self.Components) do
                v.Visible = false
            end
            return
        end

        if ESP.Highlighted == self.Object then
            color = ESP.HighlightColor
        end

        --calculations--
        local cf = self.PrimaryPart.CFrame
        if ESP.FaceCamera then
            cf = CFrame.new(cf.p, cam.CFrame.p)
        end
        local size = self.Size
        local locs = {
            TopLeft = cf * ESP.BoxShift * CFrame.new(size.X/2,size.Y/2,0),
            TopRight = cf * ESP.BoxShift * CFrame.new(-size.X/2,size.Y/2,0),
            BottomLeft = cf * ESP.BoxShift * CFrame.new(size.X/2,-size.Y/2,0),
            BottomRight = cf * ESP.BoxShift * CFrame.new(-size.X/2,-size.Y/2,0),
            TagPos = cf * ESP.BoxShift * CFrame.new(0,size.Y/2,0),
            Torso = cf * ESP.BoxShift
        }

        if ESP.Boxes then
            local TopLeft, Vis1 = WorldToViewportPoint(cam, locs.TopLeft.p)
            local TopRight, Vis2 = WorldToViewportPoint(cam, locs.TopRight.p)
            local BottomLeft, Vis3 = WorldToViewportPoint(cam, locs.BottomLeft.p)
            local BottomRight, Vis4 = WorldToViewportPoint(cam, locs.BottomRight.p)

            if self.Components.Quad then
                if Vis1 or Vis2 or Vis3 or Vis4 then
                    self.Components.Quad.Visible = true
                    self.Components.Quad.PointA = Vector2.new(TopRight.X, TopRight.Y)
                    self.Components.Quad.PointB = Vector2.new(TopLeft.X, TopLeft.Y)
                    self.Components.Quad.PointC = Vector2.new(BottomLeft.X, BottomLeft.Y)
                    self.Components.Quad.PointD = Vector2.new(BottomRight.X, BottomRight.Y)
                    self.Components.Quad.Color = color
                else
                    self.Components.Quad.Visible = false
                end
            end
        else
            self.Components.Quad.Visible = false
        end

        if ESP.Names then
            local TagPos, Vis5 = WorldToViewportPoint(cam, locs.TagPos.p)
            
            if Vis5 then
                self.Components.Name.Visible = true
                self.Components.Name.Position = Vector2.new(TagPos.X, TagPos.Y)
                self.Components.Name.Text = self.Name
                self.Components.Name.Color = color
                
                self.Components.Distance.Visible = true
                self.Components.Distance.Position = Vector2.new(TagPos.X, TagPos.Y + 14)
                self.Components.Distance.Text = math.floor((cam.CFrame.p - cf.p).magnitude) .."m away"
                self.Components.Distance.Color = color
            else
                self.Components.Name.Visible = false
                self.Components.Distance.Visible = false
            end
        else
            self.Components.Name.Visible = false
            self.Components.Distance.Visible = false
        end
        
        if ESP.Tracers then
            local TorsoPos, Vis6 = WorldToViewportPoint(cam, locs.Torso.p)

            if Vis6 then
                self.Components.Tracer.Visible = true
                self.Components.Tracer.From = Vector2.new(TorsoPos.X, TorsoPos.Y)
                self.Components.Tracer.To = Vector2.new(cam.ViewportSize.X/2,cam.ViewportSize.Y/ESP.AttachShift)
                self.Components.Tracer.Color = color
            else
                self.Components.Tracer.Visible = false
            end
        else
            self.Components.Tracer.Visible = false
        end
    end

    function ESP:Add(obj, options)
        if not obj.Parent and not options.RenderInNil then
            return warn(obj, "has no parent")
        end

        local box = setmetatable({
            Name = options.Name or obj.Name,
            Type = "Box",
            Color = options.Color --[[or self:GetColor(obj)]],
            Size = options.Size or self.BoxSize,
            Object = obj,
            Player = options.Player or plrs:GetPlayerFromCharacter(obj),
            PrimaryPart = options.PrimaryPart or obj.ClassName == "Model" and (obj.PrimaryPart or obj:FindFirstChild("HumanoidRootPart") or obj:FindFirstChildWhichIsA("BasePart")) or obj:IsA("BasePart") and obj,
            Components = {},
            IsEnabled = options.IsEnabled,
            Temporary = options.Temporary,
            ColorDynamic = options.ColorDynamic,
            RenderInNil = options.RenderInNil
        }, boxBase)

        if self:GetBox(obj) then
            self:GetBox(obj):Remove()
        end

        box.Components["Quad"] = Draw("Quad", {
            Thickness = self.Thickness,
            Color = color,
            Transparency = 1,
            Filled = false,
            Visible = self.Enabled and self.Boxes
        })
        box.Components["Name"] = Draw("Text", {
            Text = box.Name,
            Color = box.Color,
            Center = true,
            Outline = true,
            Size = 19,
            Visible = self.Enabled and self.Names
        })
        box.Components["Distance"] = Draw("Text", {
            Color = box.Color,
            Center = true,
            Outline = true,
            Size = 19,
            Visible = self.Enabled and self.Names
        })
        
        box.Components["Tracer"] = Draw("Line", {
            Thickness = ESP.Thickness,
            Color = box.Color,
            Transparency = 1,
            Visible = self.Enabled and self.Tracers
        })
        self.Objects[obj] = box
        
        obj.AncestryChanged:Connect(function(_, parent)
            if parent == nil and ESP.AutoRemove ~= false then
                box:Remove()
            end
        end)
        obj:GetPropertyChangedSignal("Parent"):Connect(function()
            if obj.Parent == nil and ESP.AutoRemove ~= false then
                box:Remove()
            end
        end)

        local hum = obj:FindFirstChildOfClass("Humanoid")
        if hum then
            hum.Died:Connect(function()
                if ESP.AutoRemove ~= false then
                    box:Remove()
                end
            end)
        end

        return box
    end

    local function CharAdded(char)
        local p = plrs:GetPlayerFromCharacter(char)
        if not char:FindFirstChild("HumanoidRootPart") then
            local ev
            ev = char.ChildAdded:Connect(function(c)
                if c.Name == "HumanoidRootPart" then
                    ev:Disconnect()
                    ESP:Add(char, {
                        Name = p.Name,
                        Player = p,
                        PrimaryPart = c
                    })
                end
            end)
        else
            ESP:Add(char, {
                Name = p.Name,
                Player = p,
                PrimaryPart = char.HumanoidRootPart
            })
        end
    end
    local function PlayerAdded(p)
        p.CharacterAdded:Connect(CharAdded)
        if p.Character then
            coroutine.wrap(CharAdded)(p.Character)
        end
    end
    plrs.PlayerAdded:Connect(PlayerAdded)
    for i,v in pairs(plrs:GetPlayers()) do
        if v ~= plr then
            PlayerAdded(v)
        end
    end
    ---//----

        --// Script Functions
        local function Tween(Target,angle)
            ForceStop = false;
            if (typeof(Target) == "Instance" and Target:IsA("BasePart")) then Target = Target.Position; end;
            if (typeof(Target) == "CFrame") then Target = Target.p end;
        
            local HRP = (Player.Character and Player.Character:FindFirstChild("HumanoidRootPart"));
            if (not HRP) then return; end;

            local StartingPosition = HRP.Position;
            local PositionDelta = (Target - StartingPosition);--Calculating the difference between the start and end positions.
            local StartTime = tick();
            local TotalDuration = (StartingPosition - Target).magnitude / Settings.Farms.TweenSpeed;
        
            repeat NextFrame:Wait();
                local Delta = tick() - StartTime;
                local Progress = math.min(Delta / TotalDuration, 1);--Getting the percentage of completion of the teleport (between 0-1, not 0-100)
                --We also use math.min in order to maximize it at 1, in case the player gets an FPS drop, so it doesn't go past the target.
                local MappedPosition = StartingPosition + (PositionDelta * Progress);
                HRP.Velocity = Vector3.new(); --Resetting the effect of gravity so it doesn't get too much and drag the player below the ground.
                HRP.CFrame = CFrame.new(MappedPosition) ;
            until (HRP.Position - Target).magnitude <= Settings.Farms.TweenSpeed / 2 or ForceStop; if (ForceStop) then ForceStop = false; return; end;  --
            HRP.Anchored = false;
            HRP.CFrame = CFrame.new(Target) * CFrame.Angles(math.rad(angle), 0, 0) ;
        end;


        for i,v in pairs(workspace.NPCs:GetDescendants()) do 
            if v:IsA("Model") and not table.find(npcTable,v.Name) then 
                table.insert(npcTable,v.Name)
            end
        end

        for i,v in pairs(workspace.NPCs.MissionNPC:GetChildren()) do 
            if v:IsA("Model") and not table.find(questTable,v.Name) then 
                table.insert(questTable,v.Name)
            end
        end



        local function tweentonpc()
            for i,v in pairs(workspace.NPCs:GetDescendants()) do 
                if v:IsA("Model") and v.Name == Settings.Teleports.Selectednpc then 
                    Tween(v:GetPivot().Position , 0)
                end
            end
        end

        local function stoptween()
            ForceStop = true;
        end

        local  findmob = function()
                local MaxDistance= math.huge 
                local find = nil 
                for i, v in pairs(workspace.Entities:GetChildren()) do
                    if string.find(v.Name, Settings.Farms.Selectedmob) and v:FindFirstChild("HumanoidRootPart")  and v.Humanoid.Health > 0 then
                        local magnitude = (player.Character:GetPivot().Position - v:GetPivot().Position).Magnitude
                        if magnitude < MaxDistance then
                            MaxDistance = magnitude
                            find = v
                        end
                    else
                print("No mob found")
                    end
                end
                return find
            end
            

        local function MobFarm()
            if Settings.Farms.MobFarm then

                if Settings.Farms.Position >= 0 then    
                    local mob = findmob()
                    Tween(mob:GetPivot().Position + Vector3.new(0,Settings.Farms.Position,0),-90)
                    if (mob:GetPivot().Position - player.Character:GetPivot().Position).magnitude <= 15 then
                        Tween(mob:GetPivot().Position + Vector3.new(0,Settings.Farms.Position,0), -90)
                        attackremote:FireServer("LightAttack")
                    end
                else
                    local mob = findmob()
                    Tween(mob:GetPivot().Position + Vector3.new(0,Settings.Farms.Position,0), 90)
                    if (mob:GetPivot().Position - player.Character:GetPivot().Position).magnitude <= 15 then
                        Tween(mob:GetPivot().Position + Vector3.new(0,Settings.Farms.Position,0), 90)
                        attackremote:FireServer("LightAttack")
                    end
                end
            end
        end


    local function shikai()
        if not Settings.Shikaifight.Toggle then
            return
        end
        local distance = 150    
        for i,v in pairs(workspace.Entities:GetChildren()) do 
            if string.find(v.Name, "ShikaiNPC") and v.Humanoid.Health > 0  then
                local magnitude = (player.Character:GetPivot().Position - v:GetPivot().Position).Magnitude
                if magnitude < distance then
                    if Settings.Shikaifight.Position >= 0 then
                        Tween(v:GetPivot().Position + Vector3.new(0,Settings.Shikaifight.Position,0),-90)
                        if magnitude <= 15 then 
                            Tween(v:GetPivot().Position + Vector3.new(0,Settings.Shikaifight.Position,0),-90)
                            attackremote:FireServer("LightAttack")
                        end
                    else
                        Tween(v:GetPivot().Position + Vector3.new(0,Settings.Shikaifight.Position,0),90)
                        if magnitude <= 15 then 
                            Tween(v:GetPivot().Position + Vector3.new(0,Settings.Shikaifight.Position,0),90)
                            attackremote:FireServer("LightAttack")
                        end
                    end
                end
            end
        end
    end

    local near = function()
        if not Settings.Autoquest.Toggle then 
            return
        end
        if player.PlayerGui.QueueUI.Enabled == true then
        local distance = math.huge
        local z = nil
        for i,v in pairs(workspace.Entities:GetChildren()) do 
            if string.find(v.Name, "Fishbone") or string.find(v.Name, "Frisker") then
                if v.Humanoid.Health > 0 and v:FindFirstChild("Highlight") then
                    local magnitude = (player.Character:GetPivot().Position - v:GetPivot().Position).Magnitude
                    if magnitude < distance then
                        distance = magnitude
                        z = v
                    end
                end
            end
        end
        return z
    end
    end




    local questboard = function()
        if not Settings.Autoquest.Toggle then
            return
        end
        if player.PlayerGui.MissionsUI.Queueing.Visible == false  and player.PlayerGui.QueueUI.Enabled == false then
            local distance = math.huge
            local quest
            for i,v in pairs(workspace.NPCs.MissionNPC:GetChildren()) do
                if v.Name == Settings.Autoquest.Questboard  then
                    local magnitude = (player.Character:GetPivot().Position - v:GetPivot().Position).Magnitude
                    if magnitude < distance then
                        distance = magnitude
                        quest = v
                    end
                end
            end
            return quest
        end
    end



    --player.PlayerGui.MissionsUI.Queueing.Visible == false 

    local function autoquest()
        if not Settings.Autoquest.Toggle then
        return
        end

        if player.PlayerGui.QueueUI.Enabled == true then
            local dummy = near()
            if Settings.Autoquest.Position >= 0 then    
                Tween(dummy:GetPivot().Position + Vector3.new(0,Settings.Autoquest.Position,0),-90)
                if (player.Character:GetPivot().Position - dummy:GetPivot().Position).Magnitude < 25 then
                    Tween(dummy:GetPivot().Position + Vector3.new(0,Settings.Autoquest.Position,0), -90)
                    attackremote:FireServer("LightAttack")
                end
            else
                Tween(dummy:GetPivot().Position + Vector3.new(0,Settings.Autoquest.Position,0), 90)
                if (player.Character:GetPivot().Position - dummy:GetPivot().Position).Magnitude < 25 then
                    Tween(dummy:GetPivot().Position + Vector3.new(0,Settings.Autoquest.Position,0), 90)
                    attackremote:FireServer("LightAttack")
                end
            end
        elseif player.PlayerGui.QueueUI.Enabled == false then
            local quest = questboard()
        if player.PlayerGui.MissionsUI.Queueing.Visible == false then
            local magnitude = (player.Character:GetPivot().Position - quest:GetPivot().Position).Magnitude
            Tween(quest:GetPivot().Position + Vector3.new(0,-8,0) ,0)
            if magnitude < 15 then
                Tween(quest:GetPivot().Position + Vector3.new(0,-8,0) ,0)
                task.wait()
                fireclickdetector(quest.Board.Union.ClickDetector)
                task.wait()
                player[Settings.Autoquest.Questboard]:FireServer("Yes")
            end
        end
    end
end



        local function streamermode() -- hides your user on the party list
            player.PlayerGui.MissionsUI.MainFrame.ScrollingFrame[name].PlayerName.Text = "Asteria on top"
        end

        local function destroykillbricks()
            for i,v in pairs(workspace.DeathBricks:GetChildren()) do
                v:Destroy()
            end
        end
        local function instantreset()
            player.Character.Head:Destroy()
        end


        local function chatlogger()
            loadstring(game:HttpGet(('https://raw.githubusercontent.com/mac2115/Cool-private/main/ESP'),true))()
        end


        local function Teleport()
            if game.PlaceId == 14071822972 then
                for i,v in pairs(game:GetService("ReplicatedStorage").Requests.RequestServerList:InvokeServer("Wandenreich City")) do
                    if v.JobID ~= game.JobId then wait()
                        player.Character.CharacterHandler.Remotes.ServerListTeleport:FireServer("Wandenreich City",v.JobID)
                    break
                    end
                end
            elseif game.PlaceId == 14070029709 then
                for i,v in pairs(game:GetService("ReplicatedStorage").Requests.RequestServerList:InvokeServer("Soul Society")) do
                    if v.JobID ~= game.JobId then wait()
                        player.Character.CharacterHandler.Remotes.ServerListTeleport:FireServer("Soul Society",v.JobID)
                    break
                    end
                end
            elseif game.PlaceId == 14069122388 then
                for i,v in pairs(game:GetService("ReplicatedStorage").Requests.RequestServerList:InvokeServer("Hueco Mundo")) do
                    if v.JobID ~= game.JobId then wait()
                        player.Character.CharacterHandler.Remotes.ServerListTeleport:FireServer("Hueco Mundo",v.JobID)
                    break
                    end
                end
            elseif game.PlaceId == 14069678431 then
                for i,v in pairs(game:GetService("ReplicatedStorage").Requests.RequestServerList:InvokeServer("Karakura Town")) do
                    if v.JobID ~= game.JobId then wait()
                        player.Character.CharacterHandler.Remotes.ServerListTeleport:FireServer("Karakura Town",v.JobID)
                    break
                    end
                end
            elseif game.PlaceId == 14069866342 then
                for i,v in pairs(game:GetService("ReplicatedStorage").Requests.RequestServerList:InvokeServer("Las Noches")) do
                    if v.JobID ~= game.JobId then wait()
                        player.Character.CharacterHandler.Remotes.ServerListTeleport:FireServer("Las Noches",v.JobID)
                    break
                    end
                end
            elseif game.PlaceId == 14069956183 then
                for i,v in pairs(game:GetService("ReplicatedStorage").Requests.RequestServerList:InvokeServer("Rukon District")) do
                    if v.JobID ~= game.JobId then wait()
                        player.Character.CharacterHandler.Remotes.ServerListTeleport:FireServer("Rukon District",v.JobID)
                    break
                    end
                end
            end
        end




        local adju = function()
            if not Settings.Adjfarm.Toggle then
                return
            end
            local distance = math.huge
            local q
            for i,v in pairs(workspace.Entities:GetChildren()) do
                if string.find(v.Name, "Jackal") then
                        local magnitude = (player.Character:GetPivot().Position - v:GetPivot().Position).Magnitude
                        if magnitude < distance then
                            distance = magnitude
                            q = v
                        end
                end
            end
            return q
        end



        
        local function autoequip()
            spawn(function()
            if not Settings.Farms.Autoequip then
                return
            end
        if player.Character:FindFirstChild("Zanpakuto") then
            player.Character.CharacterHandler.Remotes.Weapon:FireServer("UnsheatheWeapon")
        else
            return   
        end
        end)
    end






    local function farmclosest()
        if not Settings.Closest.Toggle then
            return
        end
        local distance = Settings.Closest.Distance
        for i,v in pairs(workspace.Entities:GetChildren()) do 
            if v.Humanoid.Health > 0 and v ~= player.Character then
                local magnitude = (player.Character:GetPivot().Position - v:GetPivot().Position).magnitude
                if magnitude <= distance then
                    if Settings.Closest.Position >= 0 then 
                        Tween(v:GetPivot().Position + Vector3.new(0,Settings.Closest.Position,0),-90)
                        attackremote:FireServer("LightAttack")
                    else
                        Tween(v:GetPivot().Position + Vector3.new(0,Settings.Closest.Position,0), 90)
                        attackremote:FireServer("LightAttack")
                    end
                end
            end
        end
    end



        local function adjufarm()
            if not Settings.Adjfarm.Toggle then
                return
            end
            local v = adju()
            if v == nil then
                Teleport()
            else
            if v.Humanoid.Health > 0 then
                if Settings.Adjfarm.Position >= 0 then 
                    Tween(v:GetPivot().Position + Vector3.new(0,Settings.Adjfarm.Position,0),-90)
                    if (player.Character:GetPivot().Position - v:GetPivot().Position).Magnitude < 25 then
                        Tween(v:GetPivot().Position + Vector3.new(0,Settings.Adjfarm.Position,0), -90)
                        attackremote:FireServer("LightAttack")
                    end
                else
                    Tween(v:GetPivot().Position + Vector3.new(0,Settings.Autoquest.Position,0), 90)
                    if (player.Character:GetPivot().Position - v:GetPivot().Position).Magnitude < 25 then
                        Tween(v:GetPivot().Position + Vector3.new(0,Settings.Adjfarm.Position,0), 90)
                        attackremote:FireServer("LightAttack")
                    end
                end
            elseif v.Humanoid.Health == 0 then
                Teleport()
                queue_on_teleport()
            end
        end
    end
    


        --//UI
        local Mercury = loadstring(game:HttpGet("https://raw.githubusercontent.com/deeeity/mercury-lib/master/src.lua"))()
        

        local GUI = Mercury:Create{
            Name = "Asteria Type Soul",
            Size = UDim2.fromOffset(600, 400),
            Theme = Mercury.Themes.Dark,
            Link = "https://asteria.mysellix.io/product/64906398db3d9"
        }

        local Tab = GUI:Tab{
            Name = "Main",
            Icon = "rbxassetid://8569322835"
        }

        Tab:Toggle{
            Name = "MobFarm toggle",
            StartingState = false,
            Description = nil,
            Callback = function(state) 
            Settings.Farms.MobFarm = state
            MobFarm()
            end
        }

        Tab:Toggle{
            Name = "Autoequip toggle",
            StartingState = false,
            Description = nil,
            Callback = function(state) 
            Settings.Farms.Autoequip = state
            end
        }

        Tab:Slider{
            Name = "Farm position",
            Default = 6,
            Min = -15,
            Max = 15,
            Callback = function(value) 
                Settings.Farms.Position = value
            end
        }

        Tab:Slider{
            Name = "Tween speed",
            Default = 100,
            Min = 0,
            Max = 200,
            Callback = function(value) 
                Settings.Farms.TweenSpeed = value
            end
        }

        local MyDropdown = Tab:Dropdown{
            Name = "Mob selector",
            StartingText = "Select...",
            Description = nil,
            Items = mobTable,
            Callback = function(item) 
                Settings.Farms.Selectedmob = item
                return end
        }



        Tab:Toggle{
            Name = "AutoQuest toggle",
            StartingState = false,
            Description = nil,
            Callback = function(state) 
            Settings.Autoquest.Toggle = state
            autoquest()
            end
        }

        Tab:Slider{
            Name = "Farm position",
            Default = 6,
            Min = -15,
            Max = 15,
            Callback = function(value) 
                Settings.Autoquest.Position = value
            end
        }
        
        local MyDropdown = Tab:Dropdown{
            Name = "Board selector",
            StartingText = "Select...",
            Description = nil,
            Items = questTable,

            Callback = function(item) 
                Settings.Autoquest.Questboard = item
                return end
        }


        Tab:Toggle{
            Name = "Adjucha farm toggle",
            StartingState = false,
            Description = nil,
            Callback = function(state) 
            Settings.Adjfarm.Toggle = state
            adjufarm()
            end
        }

        Tab:Slider{
            Name = "Farm position",
            Default = 6,
            Min = -15,
            Max = 15,
            Callback = function(value) 
                Settings.Adjfarm.Position = value
            end
        }

        Tab:Toggle{
            Name = "Farm closest entity to you toggle",
            StartingState = false,
            Description = nil,
            Callback = function(state) 
            Settings.Closest.Toggle = state
            adjufarm()
            end
        }

        Tab:Slider{
            Name = "Farm position",
            Default = 6,
            Min = -15,
            Max = 15,
            Callback = function(value) 
                Settings.Closest.Position = value
            end
        }


        Tab:Slider{
            Name = "Farm range",
            Default = 150,
            Min = 0,
            Max = 150,
            Callback = function(value) 
                Settings.Closest.Distance= value
            end
        }



        local Tab = GUI:Tab{
            Name = "Misc",
            Icon = "rbxassetid://8569322835"
        }
        Tab:Button{
            Name = "Serverhop",
            Description = nil,
            Callback = function() 
            Teleport()
            end
        }


        Tab:Button{
            Name = "Chatlogger",
            Description = nil,
            Callback = function() 
            chatlogger()
            end
        }

        Tab:Button{
            Name = "Streamer mode",
            Description = nil,
            Callback = function() 
            streamermode()
            end
        }


        Tab:Button{
            Name = "Instant respawn",
            Description = nil,
            Callback = function() 
            instantreset()
            end
        }

        Tab:Button{
            Name = "Destroy killbricks",
            Description = nil,
            Callback = function() 
            destroykillbricks()
            end
        }


    
        local MyDropdown = Tab:Dropdown{
            Name = "Teleport to npc",
            StartingText = "Select...",
            Description = nil,
            Items = npcTable,
            Callback = function(item) 
                Settings.Teleports.Selectednpc = item
                tweentonpc()
                return
                    end
        }

        Tab:Button{
            Name = "Stop tweening",
            Description = nil,
            Callback = function() 
            stoptween()
            end
        }

        

        local Tab = GUI:Tab{
            Name = "Visuals",
            Icon = "rbxassetid://8569322835"
        }


        Tab:Toggle{
            Name = "ESP toggle",
            StartingState = false,
            Description = nil,
            Callback = function(state) 
            ESP.Enabled= state
            end
        }


        Tab:ColorPicker{
            Style = Mercury.ColorPickerStyles.Legacy,
            Callback = function(color) 
                ESP.Color = color
            end
        }

        Tab:Toggle{
            Name = "Teammates toggle",
            StartingState = false,
            Description = nil,
            Callback = function(state) 
            ESP.TeamMates= state
            end
        }


        Tab:Toggle{
            Name = "Nametags toggle",
            StartingState = false,
            Description = nil,
            Callback = function(state) 
            ESP.Names= state
            end
        }


        Tab:Toggle{
            Name = "Boxes toggle",
            StartingState = false,
            Description = nil,
            Callback = function(state) 
            ESP.Boxes= state
            end
        }


        
        --//Loops


        local function notifier()
            for i,v in pairs(game.Players:GetChildren()) do 
                if table.find(modtable, v.UserId) then
                    GUI:Notification{
                        Title = "Admin notification",
                        Text = "An Admin is in your server!",
                        Duration = 3,
                        Callback = function() end
                    }
                end
            end
        end


        game:GetService("RunService").Heartbeat:connect(function()
            autoquest()
            MobFarm()
            shikai()
            adjufarm()
            autoequip()
            farmclosest()
            notifier()
        end)

        game:GetService("RunService").RenderStepped:Connect(function()
            cam = workspace.CurrentCamera
            for i,v in (ESP.Enabled and pairs or ipairs)(ESP.Objects) do
                if v.Update then
                    local s,e = pcall(v.Update, v)
                    if not s then warn("[EU]", e, v.Object:GetFullName()) end
                end
            end
        end)
        return ESP

